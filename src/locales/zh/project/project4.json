{
    "core":{
        "title": "Paw Cafe",
        "desc": "讓你找到全台灣的咖啡廳"
    },
    "info":{
        "item1": "個人專題",
        "item2": "UI / UX 設計師",
        "item3": "介面設計、使用者體驗設計、設計系統、前端開發",
        "item4": "切版",
        "item5": "前端工程師"
    },
    "demand":{
        "item1": "網頁視覺設計",
        "item2": "註冊/登入系統",
        "item3": "會員中心",
        "item4": "資料庫串接",
        "item5": "購物系統",
        "item6": "訂單系統",
        "item7": "收藏功能"
    },
    "team":{
        "item1": "UI / UX 設計師",
        "item2": "前端工程師",
        "item3": "後端工程師",
        "item4": "專案經理",
        "item5": "系統分析"
    },
    "brief":{
        "item1": "此為個人專題，作為練習串接資料庫與實作各種互動功能的練習平台。本專題的目的是模擬實際產品開發中的關鍵功能，包含購物車、商品收藏、登入與註冊系統等，讓我能夠更全面地理解設計與後端技術的銜接點。<br><br>專案過程中，我除了專注於設計視覺界面與操作流程，還學習了如何使用資料庫進行數據管理，實現從用戶資料到商品資訊的儲存與調用。",
        "item2": "登入與註冊系統",
        "item2-1": "支援用戶帳號創建、登入驗證與資料儲存，並確保系統安全性及用戶數據的隱私。",
        "item3": "資料庫串接與管理",
        "item3-1": "我使用 Firebase 做為資料庫儲存，實現後端資料庫與前端界面的無縫整合，支援用戶資訊、商品清單等數據的動態更新與同步。",
        "item4": "購物車功能實作",
        "item4-1": "提供商品加入購物車、調整數量、移除商品等完整的購物流程模擬，讓用戶體驗流暢且直觀。",
        "item5": "收藏商品功能",
        "item5-1": "設計收藏清單，方便用戶標記喜愛商品，並能隨時檢視與管理收藏內容。"
    },
    "briefCard":{
        "item1": "以練習前端功能實作為核心，練習串接資料庫，以及模擬電子商務平台的常見需求，如購物車、收藏商品與登入註冊功能。透過專案開發，提升前端技術能力，並強化 UI 設計與功能實現的銜接。",
        "item2": "在這個專案中，我擔任 UI/UX 設計師及前端工程師。完成了全台咖啡廳資料串接功能，使用者可尋找全台各地之咖啡廳，以及開發會員系統及購物車功能。",
        "item3": "在練習前端功能時，我第一次練習串接API，我花了比較多時間理解。串接 API 使得數據交互變得複雜，並且還要確保購物車中的商品數據能夠即時更新並正確反映於前端。",
        "item4": "專案完成後，成功開發出可實際操作的前端應用，也提升了我對於前端技術上的理解，為未來的產品開發增添技術價值。"
    },
    "background":{
        "item1": "我平常休假日就喜歡去咖啡廳，但是要找到符合需求的咖啡廳常常要花許多時間，需要開啟 Google Map 一一去查看，或是開啟評論才能知道這間咖啡廳有沒有插座、wifi或是座位數多不多，基於這個需求，我決定以此為專案目標，串接第三方 API 資料庫，製作一個以全台灣咖啡廳資訊為主題的網站，並且為了更加練習前端技能，也加入了電商及會員系統的功能。"
    },
    "goal":{
        "item1": "提供全台咖啡廳資訊",
        "item2": "提供使用者註冊/登入會員",
        "item3": "建立購物系統",
        "item4": "提供商品收藏功能"
    },
    "problem":{
        "item1": "對於串接資料庫系統不熟悉",
        "item2": "資料庫中有些資料不統一、缺漏"
    },
    "persona": { 
        "info": {
            "item1": "咖啡廳愛好者",
            "item2": "假日喜歡待在咖啡廳",
            "item3": "長時間在咖啡廳使用電腦工作"
        },
        "difficult": {
            "item1": "花很多時間尋找適合的咖啡廳"
        },
        "insight": {
            "item1": "提供咖啡廳資料分類",
            "item2": "顯示相關重點資訊"
        }
    },
    "process": {
        "item1": "開源 API 資料",
        "item1-1": "我使用了開源的咖啡廳數據 API，於前端串接 API 檔案，並設置了清單顯示資料（如：名稱、地址、評分等）。",
        "item1-2": "資料庫中並沒有提供咖啡廳的照片資料，為了畫面呈現需求，我串接了 <strong>Unspalsh</strong> 的 API，使圖片隨機產生。",
        "item2": "電商資料庫",
        "item2-1": "我使用 <strong>Firebase</strong> 建立帳號管理以及商品資料庫。"
    },
    "principle": { 
        "item1": "簡單直觀的介面",
        "item1-1": "我於首頁展示了咖啡廳的資料，讓進到此網站的使用者可以很直覺的查看咖啡廳資訊。",
        "item2": "一致的",
        "item2-1": "我將各種卡片設計了一致的樣式，使頁面呈現整齊乾淨，並使資料庫串接具有統一性。",
        "item3": "隱藏式設計",
        "item3-1": "我將各種詳細資訊收合於側邊抽屜元件，點擊時才會顯示，可使版面不過於雜亂。",
        "item4": "溫暖風格",
        "item4-1": "網站色調選擇溫暖且舒適的顏色（如米色、深灰色），呈現出咖啡廳放鬆的氛圍。"
    },
    "mockup": { 
        "tab": {
            "item1": "註冊頁",
            "item2": "首頁",
            "item3": "咖啡食譜",
            "item4": "商品頁",
            "item5": "購物車",
            "item6": "個人資料",
            "item7": "我的訂單",
            "item8": "願望清單"
        },
        "info": {
            "item1": "隱藏式抽屜元件",
            "item1-1": "點擊按鈕可切換登入或註冊。",
            "item2": "會員面板",
            "item2-1": "登入後顯示會員中心及登出按鈕。",
            "item3": "篩選功能",
            "item3-1": "提供搜尋欄及區域篩選器，可更快查詢到適合地點。",
            "item4": "隱藏式抽屜元件",
            "item4-1": "隱藏式設計顯示咖啡廳資訊，可節省空間，並且可快速關閉查詢下一間咖啡廳。",
            "item5": "卡片式設計",
            "item5-1": "以卡片式網格排列，並且搭配食譜名稱及時間說明。",
            "item6": "動態調整資訊",
            "item6-1": "依照選擇的份數，食材數量可動態調整。",
            "item7": "篩選器",
            "item7-1": "可篩選商品類別或價格排序。",
            "item8": "商品卡片",
            "item8-1": "可查看資訊或是直接將商品加入購物車，以及加入收藏清單。",
            "item9": "彈出視窗",
            "item9-1": "收藏/取消收藏以彈出視窗呈現，並顯示該商品名稱及圖片。",
            "item10": "商品內頁",
            "item10-1": "顯示商品詳情，並可調整數量加入購物車。",
            "item11": "購物車元件",
            "item11-1": "隱藏式設計，點擊「加入購物車」後顯示，可調整數量或是刪除。",
            "item12": "購物車總覽區塊",
            "item12-1": "可調整數量或是刪除，底部顯示總金額。",
            "item13": "結帳資訊區塊",
            "item13-1": "填寫購買者資訊並選擇付款方式。",
            "item14": "訂單資訊",
            "item14-1": "送出訂單後顯示詳細訂單資訊，搭配隨機產生之訂單編號。",
            "item15": "個人資料區塊",
            "item15-1": "可修改會員資料，並同步於資料庫更新。",
            "item16": "修改密碼區塊",
            "item16-1": "可修改會員密碼，並同步於資料庫更新。",
            "item17": "彈出視窗通知",
            "item17-1": "修改資訊後已彈出視窗通知使用者確認。",
            "item18": "訂單頁面",
            "item18-1": "以卡片式由新至舊排列，可查看訂單詳情及購買商品資訊。",
            "item19": "願望清單頁面",
            "item19-1": "以卡片式網格排列，點擊「愛心」可取消收藏，亦可前往商品詳情頁。"
        }
    },
    "handoff": { 
        "item1": "在 <strong>Figma</strong> 中，我透過 <strong>Variable</strong> 功能展示了深色模式的樣式，可以透過控制面板切換，以查看不同顏色呈現的結果。此外，我展示了 RWD 畫面的各種斷點，以及不同裝置上的畫面效果，確保設計能在各種螢幕尺寸有良好的體驗。"
    },
    "feedback": { 
        "item1": "系統構思",
        "item1-1": "在這個專案中，我完成了前台、後台與資料庫的整合，並著重於資料取得與呈現的方式。在設計階段，根據系統需求對使用者介面進行了多次調整，確保使用者體驗與功能性兼顧。",
        "item2": "資料庫 API 串接",
        "item2-1": "我練習了如何串接第三方資料庫 API，從中學習如何有效取得資料並將其顯示於前端介面。同時，我也優化了 API 請求的處理方式，提升了系統的運行效率。",
        "item3": "建立後台資料庫",
        "item3-1": "利用 Firebase，我建立了商品資料庫與會員管理系統，並設置了會員密碼的安全性限制。在資料操作方面，當前台進行資訊修改（如商品庫存或會員資料）時，能即時同步更新到資料庫，確保數據的一致性。",
        "item4": "註冊＆登入功能",
        "item4-1": "在開發註冊功能時，我設計了流程讓新會員註冊後能即時於資料庫建立對應的會員資料。同時，在使用者更新個人資料（例如密碼）時，確保資料庫也能同步更新，提升系統的完整性。",
        "item5": "購物車＆訂單功能",
        "item5-1": "購物車功能是本專案中最具挑戰性的部分之一。我實現了商品加入購物車後的數量調整與刪除功能，並運用了 Vue Store 管理狀態以保持資料一致性，確保購物車與訂單處理的流程順暢。"
    }
    
    
}